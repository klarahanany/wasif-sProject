<%- include('partials/headerAdmin'); -%>

<head>
  <title>Product Management</title>
</head>

<main>
  <h1>Product Management</h1>

  <!-- Form for downloading product data -->
  <form id="formDownload" action="/admin/inventory/downloadProductsData" method="get">
    <button type="submit">Download Products Data</button>
  </form>

  <!-- Buttons for Update, Delete, and Add -->
  <div class="addDelUpdateProduct">
    <button id="addBtn" onclick="showAddForm()">add product</button>
    <button id="updateBtn" onclick="showUpdateForm()">update product</button>
    <button id="deleteBtn" onclick="showDeleteForm()">delete product</button>
  </div>

  <!-- Product Update, Delete, and Add Forms -->

  <!-- Update Product -->
  <div id="updateForm" style="display: none">
    <h2>Update Product</h2>
    <form id="formUpdate">
      <img id="updateImage" alt="Example Image" style="display: none" />

      <!-- Product name -->
      <label for="productName">Product Name</label>
      <!-- Dropdown for selecting product to update -->
      <select id="selectOption" name="selectName" onchange="changeProductForUpdate()">
        <option value="selectProduct">Select Product To Update</option>
        <% options.forEach(function(option) { %>
        <option value="<%= option.value %>"><%= option.label %></option>
        <% }); %>
      </select>

      <!-- Product image -->
      <label for="productImage">Product Image</label>
      <input type="file" name="image" id="imageInput" />

      <!-- Product description -->
      <label for="description">Product Description</label>
      <input type="text" id="descriptionForProductUpdate" name="description" required /><br />

      <!-- Product category -->
      <label for="category">Product Category</label>
      <select id="categoryForProductUpdate" name="selectOption">
        <option value="selectCategory">Select Category</option>
        <option value="Wine">Wine</option>
        <option value="Beer">Beer</option>
        <option value="Alcohol">Alcohol</option>
        <option value="Accessories">Accessories</option>
      </select>
      <br />

      <!-- Product price -->
      <label for="price">Product Price</label>
      <input type="text" id="priceForProductUpdate" name="price" required /><br />

      <!-- Product quantity -->
      <label for="quantity">Product Quantity</label>
      <input type="number" min="0" id="quantityForProductUpdate" name="quantity" required /><br />

      <p id="statusUpdate" style="color: red; font-weight: bold"></p>
      <p id="statusSuccess" style="color: green; font-weight: bold"></p>
      <button type="submit" id="updateButton">Update</button>
    </form>
  </div>

  <!-- Delete Product -->
  <div id="deleteForm" style="display: none">
    <h2>Delete Product</h2>
    <form>
      <!-- Product name -->
      <label for="productName">Product Name</label>
      <select id="selectOptionForDelete" name="selectOption">
        <option value="selectProduct">Select Product</option>
        <% options.forEach(function(option) { %>
        <option value="<%= option.value %>"><%= option.label %></option>
        <% }); %>
      </select>

      <p id="statusDelete" style="color: red; font-weight: bold"></p>
      <p id="statusSuccessForDelete" style="color: green; font-weight: bold"></p>
      <button id="deleteButton" type="submit">Delete</button>
    </form>
  </div>

  <!-- Add Product -->
  <div id="addForm" style="display: none">
    <h2>Add Product</h2>
    <form id="addingForm" action="/admin/inventory/add-product" method="post" enctype="multipart/form-data">
      <!-- Product image -->
      <label for="newProductImage">Product Image</label>
      <input id="file" type="file" name="image" required />

      <!-- Product name -->
      <label for="newProductName">Product Name</label>
      <input type="text" id="newProductName" name="newProductName" required /><br />

      <!-- Product description -->
      <label for="description">Product Description</label>
      <input type="text" id="descriptionForProductAdd" name="description" required /><br />

      <!-- Product category -->
      <label for="category">Product Category</label>
      <select id="categoryForProductAdd" name="selectOption">
        <option value="selectCategory">Select Category</option>
        <option value="Wine">Wine</option>
        <option value="Beer">Beer</option>
        <option value="Alcohol">Alcohol</option>
        <option value="Accessories">Accessories</option>
      </select>
      <br />

      <!-- Product price -->
      <label for="price">Product Price</label>
      <input type="text" id="priceForProductAdd" name="price" required /><br />

      <!-- Product quantity -->
      <label for="quantity">Product Quantity</label>
      <input type="number" min="0.0" id="quantityForProductAdd" name="quantity" required /><br />

      <p id="statusAdd" style="color: red; font-weight: bold"></p>
      <p id="statusSuccessForAdd" style="color: green; font-weight: bold"></p>
      <input class="btnadd" type="submit" id="addButton" value="ADD" />
    </form>
  </div>

  <!-- Table for displaying products from MongoDB -->
  <div>
    <h2>Product List</h2>
    <div class="searchBarContainer">
      <input id="searchBar" type="text" placeholder="Search.." />
      <i class="fa-solid fa-magnifying-glass"></i>
    </div>
    <table>
      <thead>
        <tr>
          <th>Product Image</th>
          <th>Product Name</th>
          <th>Product Description</th>
          <th>Product Category</th>
          <th>Product Quantity</th>
          <th>Product Price</th>
        </tr>
      </thead>

      <tbody>
        <% products.forEach(function(product) { %>
        <tr id="<%=product._id%>">
          <td>
            <img src="/<%= product.image %>" alt="" />
          </td>
          <td><%= product.name %></td>
          <td><%= product.description %></td>
          <td><%= product.category %></td>
          <% if (product.quantity <=10) { %>
          <td style="color: red; font-weight: bold"><%= product.quantity %></td>
          <%} else{%>
          <td><%= product.quantity %></td>
          <%}%>
          <td>$<%= product.price %></td>
        </tr>
        <% }); %>
      </tbody>
    </table>
  </div>
</main>

<script>
  var products1 = `<%- JSON.stringify(products) %>`;
  var products = JSON.parse(products1);
  var admin1 = `<%- JSON.stringify(admin) %>`;
  var admin = JSON.parse(admin1);

  // Adjusting visibility of buttons based on the admin's role
  // Mainadmin
  if (admin.role == "mainadmin") {
    document.getElementById("addBtn").style.display = "block";
    document.getElementById("deleteBtn").style.display = "block";
    document.getElementById("updateBtn").style.display = "block";
    document.getElementById("formDownload").style.display = "block";
  }
  // Worker
  else if (admin.role == "worker") {
    document.getElementById("addBtn").style.display = "none";
    document.getElementById("deleteBtn").style.display = "none";
    document.getElementById("updateBtn").style.display = "none";
    document.getElementById("formDownload").style.display = "none";
  }
  // Highlighting the selected navigation tab
  document.getElementById("productManage").style.backgroundColor = "#f9df4b";

  // Event listener for the product update form
  const formUpdate = document.getElementById("formUpdate");
  formUpdate.addEventListener("submit", async (e) => {
    e.preventDefault();
    // Retrieving form values
    const value = document.getElementById("selectOption").value;
    const name = document.getElementById("selectOption");
    const description = document.getElementById("descriptionForProductUpdate");
    const price = document.getElementById("priceForProductUpdate");
    const quantity = document.getElementById("quantityForProductUpdate");
    const category = document.getElementById("categoryForProductUpdate");
    var statusUpdate = document.getElementById("statusUpdate");

    // Validation checks
    if (value == "selectProduct") {
      statusUpdate.textContent = "please select product";
      document.getElementById("statusSuccess").textContent = "";
    } else if (category.value == "selectCategory") {
      statusUpdate.textContent = "please choose category";
      document.getElementById("statusSuccess").textContent = "";
    } else if (price.value <= 0) {
      statusUpdate.textContent = "please choose relevante price";
      document.getElementById("statusSuccess").textContent = "";
    } else if (quantity.value < 0) {
      statusUpdate.textContent = "please choose relevante quantity";
      document.getElementById("statusSuccess").textContent = "";
    } else {
      // Sending update request to the server
      const formData = new FormData(formUpdate);
      const rawResponse = await fetch("http://localhost:3000/admin/inventory/update-product", {
        method: "POST",
        body: formData,
      });
      const content = await rawResponse.json();

      // Handling server response
      if (content == "done") {
        description.value = "";
        quantity.value = "";
        price.value = "";
        category.value = "selectCategory";
        name.value = "selectProduct";
        statusUpdate.textContent = "";
        document.getElementById("updateImage").style.display = "none";
        document.getElementById("imageInput").value = "";
        document.getElementById("statusSuccess").textContent = "Product has been updated";
      }
    }
  });

  // Event listener for the delete product button
  const deleteButton = document.getElementById("deleteButton");
  deleteButton.addEventListener("click", async (e) => {
    e.preventDefault();
    // Retrieving selected product for deletion
    const name = document.getElementById("selectOptionForDelete");
    var statusDelete = document.getElementById("statusDelete");

    // Validation checks
    if (name.value == "selectProduct") {
      statusDelete.textContent = "please select product";
    } else {
      // Sending delete request to the server
      var body = { selectedValue: name.value };
      const rawResponse = await fetch("http://localhost:3000/admin/inventory/delete-product", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(body),
      });
      const content = await rawResponse.json();

      // Handling server response
      if (content == "done") {
        name.value = "selectProduct";
        statusDelete.textContent = "";
        document.getElementById("statusSuccessForDelete").textContent = "Product has been deleted";
      }
    }
  });

  // Event listener for the add product form
  const form = document.getElementById("addingForm");
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const image = document.getElementById("img");
    const name = document.getElementById("newProductName");
    const description = document.getElementById("descriptionForProductAdd");
    const price = document.getElementById("priceForProductAdd");
    const quantity = document.getElementById("quantityForProductAdd");
    const category = document.getElementById("categoryForProductAdd");
    var statusAdd = document.getElementById("statusAdd");

    // Sending add product request to the server
    const formData = new FormData(form);
    const rawResponse = await fetch(form.action, {
      method: form.method,
      body: formData,
    });
    const content = await rawResponse.json();

    // Handling server response
    if (content.error) {
      statusAdd.textContent = content.error;
      document.getElementById("statusSuccessForAdd").textContent = "";
    } else if (content.status) {
      description.value = "";
      quantity.value = "";
      price.value = "";
      category.value = "selectCategory";
      name.value = "";
      statusAdd.textContent = "";
      document.getElementById("file").value = "";
      document.getElementById("statusSuccessForAdd").textContent = content.status;
    }
  });

  // Functions to show respective forms
  function showUpdateForm() {
    document.getElementById("updateForm").style.display = "block";
    document.getElementById("deleteForm").style.display = "none";
    document.getElementById("addForm").style.display = "none";
  }

  function showDeleteForm() {
    document.getElementById("updateForm").style.display = "none";
    document.getElementById("deleteForm").style.display = "block";
    document.getElementById("addForm").style.display = "none";
  }

  function showAddForm() {
    document.getElementById("updateForm").style.display = "none";
    document.getElementById("deleteForm").style.display = "none";
    document.getElementById("addForm").style.display = "block";
  }

  // Function to handle product selection for update
  async function changeProductForUpdate() {
    const updateImage = document.getElementById("updateImage");
    const value = document.getElementById("selectOption").value;
    const description = document.getElementById("descriptionForProductUpdate");
    const price = document.getElementById("priceForProductUpdate");
    const quantity = document.getElementById("quantityForProductUpdate");
    const category = document.getElementById("categoryForProductUpdate");

    if (value != "selectProduct") {
      updateImage.style.display = "block";
      var body = { send: "empty " };
      const rawResponse = await fetch("http://localhost:3000/admin/inventory/update-product/changes", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(body),
      });
      const content = await rawResponse.json();
      var products = content.products;
      console.log(content.products);
      for (let index = 0; index < products.length; index++) {
        const name = products[index].name;
        console.log(name);
        if (name === value) {
          description.value = products[index].description;
          price.value = products[index].price;
          quantity.value = products[index].quantity;
          category.value = products[index].category;
          updateImage.src = `/${products[index].image}`;
        }
      }
    } else {
      updateImage.style.display = "none";
    }
  }

  // Event listener for the product search bar
  document.getElementById("searchBar").addEventListener("keyup", (e) => {
    const searchData = e.target.value.toLowerCase();
    const filteredData = products.filter((item) => {
      return item.name.toLowerCase().includes(searchData);
    });

    products.forEach((pro) => {
      const userElement = document.getElementById(`${pro._id}`);
      if (filteredData.includes(pro)) {
        userElement.style.display = "table-row";
      } else {
        userElement.style.display = "none";
      }
    });
  });
</script>

<%- include('partials/footer'); -%>
